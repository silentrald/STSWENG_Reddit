name: Development

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  nuxt_client:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout 🛎
        uses: actions/checkout@master

      - name: Setup node env 🏗
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path 🛠
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules 📦
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies 👨🏻‍💻
        run: yarn
        working-directory: ./client

      - name: Run linter 👀
        run: yarn lint
        working-directory: ./client

      - name: Run tests 🧪
        run: yarn test
        working-directory: ./client

  express_server:
    runs-on: ubuntu-latest

    container: node

    strategy:
      matrix:
        node-version: [14.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: stsweng_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stsweng_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout 🛎
      uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }} 😊
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path 🛠
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules 📦
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Packages 📦
      run: yarn
      working-directory: ./server

    # - name: Build
    #   run: npm run build --if-present
    #   working-directory: ./server

    - name: Linter 👌
      run: yarn lint
      working-directory: ./server

    - name: Migrate Up 🔺
      run: yarn migrate-up
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Tests (Jest) 🧪
      run: yarn test
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        JWT_SECRET: temp_secret
      working-directory: ./server
    
    - name: Migrate Down 🔻
      run: yarn migrate-down
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server
      
