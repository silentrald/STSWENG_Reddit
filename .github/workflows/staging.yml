name: Staging

on:
  push:
    branches:
      - staging

jobs:
  express_server:
    runs-on: ${{ matrix.os }}

    container: node

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: stsweng_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stsweng_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout üõé
      uses: actions/checkout@v2
    
    - name: Use Node.js ${{ matrix.node-version }} üòä
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path üõ†
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules üì¶
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Packages üì¶
      run: yarn
      working-directory: ./server

    # - name: Build
    #   run: npm run build --if-present
    #   working-directory: ./server

    - name: Linter üëå
      run: yarn lint
      working-directory: ./server

    - name: Migrate Up üî∫
      run: yarn migrate-up
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Insert Data üîñ
      run: yarn db-insert
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Unit Tests (Jest) üß™
      run: yarn test-unit
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        JWT_SECRET: temp_secret
      working-directory: ./server
    
    - name: Integration Tests (Jest) üß™
      run: yarn test-int
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
        JWT_SECRET: temp_secret
      working-directory: ./server
    
    - name: Delete Data ‚ùå
      run: yarn migrate-down
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Migrate Down üîª
      run: yarn migrate-down
      env:
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: postgres
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Install Heroku üá≠
      run: snap install --classic heroku
    
    - name: Login to Heroku ‚û°Ô∏è
      run: heroku login
      env:
        HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
    
    - name: Deploy Stage to Heroku Stage ‚úàÔ∏è
      run: |
        heroku git:remote -a stsweng-rocket-server-staging
        git subtree push --prefix server heroku staging:master
    