name: QA

on:
  push:
    branches:
      - qa

jobs:
  nuxt_client:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [14]

    steps:
      - name: Checkout üõé
        uses: actions/checkout@v2

      - name: Setup node env üèó
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Get yarn cache directory path üõ†
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache node_modules üì¶
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies üë®üèª‚Äçüíª
        run: yarn
        working-directory: ./client

      - name: Run linter üëÄ
        run: yarn lint
        working-directory: ./client

      - name: Run tests üß™
        run: yarn test-spec
        working-directory: ./client

  express_server:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: stsweng_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stsweng_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout üõé
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }} üòä
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path üõ†
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules üì¶
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Packages üì¶
      run: yarn
      working-directory: ./server

    # - name: Build
    #   run: npm run build --if-present
    #   working-directory: ./server

    - name: Linter üëå
      run: yarn lint
      working-directory: ./server

    - name: Migrate Up üî∫
      run: yarn migrate-up
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Insert Data üîñ
      run: yarn db-insert
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Unit Tests (Jest) üß™
      run: yarn test-unit
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        JWT_SECRET: temp_secret
      working-directory: ./server
    
    - name: Integration Tests (Jest) üß™
      run: yarn test-int
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        JWT_SECRET: temp_secret
      working-directory: ./server
    
    - name: Delete Data ‚ùå
      run: yarn db-delete
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Migrate Down üîª
      run: yarn migrate-down
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server
    
  e2e:
    needs: [ nuxt_client, express_server ]

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [14.x]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: stsweng_user
          POSTGRES_PASSWORD: password
          POSTGRES_DB: stsweng_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout üõé
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }} üòä
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path üõ†
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Cache node_modules üì¶
      uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    
    - name: Install Node Postgres
      run: yarn add pg
      working-directory: ./server

    - name: Migrate Up üî∫
      run: yarn migrate-up
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Insert Data üîñ
      run: yarn db-insert
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    # Initiate docker
    - name: Initialize Docker üì§
      run: |
        docker-compose build
        docker-compose up -d
      working-directory: ./server

    # Automation testing
    - name: Install Python üêç
      uses: actions/setup-python@v2
      with:
        python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    
    - name: Install Robot Framework Packages ü§ñ
      run: |
        pip install robotframework
        pip install --upgrade robotframework-seleniumlibrary
        pip install webdrivermanager
        pip install chromedriver
      working-directory: ./e2e
    
    - name: Install Chrome Browser ü•Ω
      run: |
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo apt install ./google-chrome-stable_current_amd64.deb
    
    - name: Install chromedriver ü•Ω
      run: |
        wget https://chromedriver.storage.googleapis.com/88.0.4324.27/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo cp chromedriver /usr/bin/chromedriver
        sudo chown root /usr/bin/chromedriver
        sudo chmod +x /usr/bin/chromedriver
        sudo chmod 755 /usr/bin/chromedriver

    - name: Automated E2E test with Robot ü§ñ
      run: robot UserRegistration.robot
      working-directory: ./e2e
    
    - name: Stop Docker üì§
      run: |
        docker-compose down
    
    - name: Delete Data ‚ùå
      run: yarn db-delete
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server

    - name: Migrate Down üîª
      run: yarn migrate-down
      env:
        NODE_ENV: development
        POSTGRES_USER: stsweng_user
        POSTGRES_PASSWORD: password
        POSTGRES_DB: stsweng_db
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
      working-directory: ./server